{"version":3,"sources":["assets/images/logo-bonus.svg","components/AppHeader/index.ts","components/AppHeader/AppHeader.tsx","assets/images/bg-pentagon.svg","assets/icons/icon-rock.svg","assets/icons/icon-spock.svg","assets/icons/icon-paper.svg","assets/icons/icon-scissors.svg","assets/icons/icon-lizard.svg","components/GameItem/index.ts","components/GameItem/GameItem.tsx","pages/AppInterface/index.ts","pages/AppInterface/AppInterface.tsx","components/AppFooter/index.ts","components/AppFooter/AppFooter.tsx","assets/images/image-rules-bonus.svg","assets/icons/icon-close.svg","pages/AppModal/index.ts","pages/AppModal/AppModal.tsx","containers/PortalComponent/index.ts","containers/PortalComponent/PortalComponent.tsx","components/GameResult/index.ts","components/GameResult/GameResult.tsx","containers/hocs/withGameProcess.tsx","utils/typeCheckers.ts","components/WinnerIndicator/index.ts","components/WinnerIndicator/WinnerIndicator.tsx","pages/Game/index.ts","pages/Game/Game.tsx","App.tsx","index.tsx"],"names":["AppHeader","score","className","href","src","logo","alt","GameItem","type","imgUrl","rock","spock","paper","scissors","lizard","AppInterface","selectItem","pentagon","onClick","AppFooter","switchModal","AppModal","e","stopPropagation","close","rules","PortalComponent","children","id","modalRoot","document","createElement","useEffect","body","prepend","style","overflow","remove","ReactDOM","createPortal","GameResult","transformResult","result","dropSelection","changeScore","memoizedChangeScore","useCallback","message","withGameProcess","View","props","useState","gameResult","setGameResult","switchSelection","computerSelectionNumber","Math","floor","random","computerSelection","playerSelection","value","resultView","ResultView","ComputerSelection","PlayerSelection","WinnerIndicator","GameProcess","computerSelectionLoaded","toggleComputerSelectionLoaded","resultViewLoaded","toggleResultViewLoaded","setTimeout","App","isModalActive","toggleModal","setScore","loadedScore","localStorage","getItem","modal","gameContent","diff","newValue","setItem","String","render","StrictMode","getElementById"],"mappings":"8VAAe,G,KAAA,IAA0B,wC,OCE1BA,ECQ6B,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC1C,OACI,wBAAQC,UAAU,aAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGC,KAAK,IAAR,SAAY,qBAAKD,UAAU,mBAAmBE,IAAKC,EAAMC,IAAI,WAC7D,sBAAKJ,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAf,mBACA,qBAAKA,UAAU,cAAf,SAA8BD,eClBvC,MAA0B,wCCA1B,G,MAAA,IAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,wCCE1BM,G,MCiB2B,SAAC,GAAa,IAAXC,EAAU,EAAVA,KACnCC,EAAqB,CAAEC,OAAMC,QAAOC,QAAOC,WAAUC,UAE3D,OACI,qBAAKZ,UAAS,oBAAeM,GAA7B,SACI,qBAAKN,UAAU,qBAAf,SACI,qBAAKE,IAAKK,EAAOD,GAAOF,IAAKE,UCvB9BO,ECUmC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAChD,OACI,yBAASd,UAAU,gBAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKE,IAAKa,EAAUX,IAAI,aACxB,qBAAKJ,UAAU,yBAAyBgB,QAAS,kBAAMF,EAAW,UAAlE,SACI,cAAC,EAAD,CAAUR,KAAK,YAEnB,qBAAKN,UAAU,yBAAyBgB,QAAS,kBAAMF,EAAW,aAAlE,SACI,cAAC,EAAD,CAAUR,KAAK,eAEnB,qBAAKN,UAAU,yBAAyBgB,QAAS,kBAAMF,EAAW,UAAlE,SACI,cAAC,EAAD,CAAUR,KAAK,YAEnB,qBAAKN,UAAU,yBAAyBgB,QAAS,kBAAMF,EAAW,SAAlE,SACI,cAAC,EAAD,CAAUR,KAAK,WAEnB,qBAAKN,UAAU,yBAAyBgB,QAAS,kBAAMF,EAAW,WAAlE,SACI,cAAC,EAAD,CAAUR,KAAK,qBC7BxBW,G,MCM6B,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAC1C,OACI,wBAAQlB,UAAU,aAAlB,SACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQgB,QAASE,EAAalB,UAAU,oBAAxC,yBCZD,G,MAAA,IAA0B,+CCA1B,MAA0B,uCCE1BmB,ECS2B,SAAC,GAAmB,IAAlBD,EAAiB,EAAjBA,YAExC,OACI,qBAAKF,QAASE,EAAalB,UAAU,oBAArC,SACI,sBAAKgB,QAAS,SAACI,GAAD,OAAyCA,EAAEC,mBACpDrB,UAAU,QADf,UAEI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,2BAAd,mBACA,qBAAKE,IAAKoB,EAAON,QAASE,EAAad,IAAI,QAAQJ,UAAU,yCAEjE,sBAAKA,UAAU,iBAAf,UACI,qBAAKE,IAAKqB,EAAOnB,IAAI,QAAQJ,UAAU,yBACvC,qBAAKE,IAAKoB,EAAON,QAASE,EAAad,IAAI,QAAQJ,UAAU,8CCrBlEwB,ECMyC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAC3DC,EAA4BC,SAASC,cAAc,OAazD,OAZAF,EAAUD,GAAKA,EAEfI,qBAAU,WAGN,OAFAF,SAASG,KAAKC,QAAQL,GACtBC,SAASG,KAAKE,MAAMC,SAAW,SACxB,WACHP,EAAUQ,SACVP,SAASG,KAAKE,MAAMC,SAAW,MAEpC,CAACP,IAIAS,IAASC,aACLZ,EACAE,ICvBGW,G,YCQ+B,SAAC,GAA4C,IAOlFC,EAPwCC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAC9DC,EAAsBC,uBAAY,kBAAMF,EAAYF,KAAS,IAEnEV,qBAAU,WACNa,MACD,CAACH,EAAQG,IAL0E,SAOjFJ,OAPiF,gBAOjFA,IAPiF,eAOjFA,IAPiF,cAOjFA,MAPiF,KAatF,IAAMM,EAAsC,SAA5BN,EAAgBC,GAAqB,QAArC,cAAsDD,EAAgBC,GAAtE,KAEhB,OACI,sBAAKxC,UAAU,cAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoC6C,IACpC,wBAAQ7B,QAASyB,EAAezC,UAAU,qBAA1C,6BCkDG8C,EAzDS,kBAAM,SAACC,GAC3B,OAAO,SAACC,GAAsB,IAAD,EACWC,mBAA4B,MADvC,mBAClBC,EADkB,KACNC,EADM,KAGzBrB,qBAAU,WACN,IAgBKsB,EAhBCC,EAA0BC,KAAKC,MAAsB,EAAhBD,KAAKE,WADpC,SAiBPJ,OAjBO,iBAiBPA,IAjBO,uBAiBPA,IAjBO,iBAiBPA,IAjBO,eAiBPA,IAjBO,oBAiBPA,MAjBO,KAyBZ,IAAMK,EAAoBL,EAAgBC,GACpCb,EAjBY,CACd,CAAC,EAAG,GAAI,EAAG,GAAI,GACf,EAAE,EAAG,EAAG,GAAI,EAAG,GACf,CAAC,GAAI,EAAG,EAAG,GAAI,GACf,EAAE,EAAG,GAAI,EAAG,EAAG,GACf,CAAC,GAAI,EAAG,GAAI,EAAG,IAYMY,EAAgBJ,EAAMU,kBAAkBL,GAEjEF,EAAc,CAAEX,SAAQiB,wBACzB,CAACT,EAAMU,kBAEV,ICtDoBC,EDsDdnB,EAASU,EAAaA,EAAWV,OAAS,EAE1CiB,EAAoBP,ICvDb,UADOS,EDwDgCT,EAAWO,oBCvD9B,UAAVE,GAA+B,aAAVA,GAAkC,WAAVA,GAAgC,UAAVA,GDwDtF,cAAC,EAAD,CAAUrD,KAAM4C,EAAWO,oBAAuB,6BAEhDG,EAAaV,EACf,cAAC,EAAD,CAAYR,YAAaM,EAAMN,YAAaD,cAAeO,EAAMP,cACrDD,OAAQA,IAClB,6BAEAkB,EAAkBV,EAAMU,gBAC1B,cAAC,EAAD,CAAUpD,KAAM0C,EAAMU,kBACpB,6BAEN,OAAO,cAACX,EAAD,CAAMc,WAAYD,EACZE,kBAAmBL,EACnBM,gBAAiBL,EACjBlB,OAAQU,EAAaA,EAAWV,OAAS,OEvE/CwB,G,MCEmB,WAC9B,OACI,qBAAKhE,UAAU,mBAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,kCCNhBiE,EC8DAnB,KAlD0B,SAAC,GAAgE,IAA9De,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,kBAAmBC,EAA8B,EAA9BA,gBAAiBvB,EAAa,EAAbA,OAAa,EACpCS,oBAAkB,GADkB,mBAC9FiB,EAD8F,KACrEC,EADqE,OAElDlB,oBAAkB,GAFgC,mBAE9FmB,EAF8F,KAE5EC,EAF4E,KAcrG,OAVAvC,qBAAU,WACNwC,YAAW,WACPH,GAA8B,GAE9BG,YAAW,WACPD,GAAuB,KACxB,OACJ,OACJ,IAGC,yBAASrE,UAAU,eAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,gFAAf,UACI,4CACA,sBAAKA,UAAU,qBAAf,UACK+D,EACD,qBACI/D,UAAS,oCAA+BoE,GAA+B,IAAX5B,EAAe,mBAAqB,IADpG,SAEI,cAAC,EAAD,YAIX4B,EACG,qBACIpE,UAAS,kFAA8EoE,EAA8B,GAAX,UAD9G,SAEKP,IAEH,KACN,sBAAK7D,UAAU,kFAAf,UACI,kDACA,sBAAKA,UAAU,qBAAf,UACKkE,EAA0BJ,EAAoB,qBAAK9D,UAAU,eAC9D,qBACIA,UAAS,oCAA+BoE,IAAgC,IAAZ5B,EAAgB,mBAAqB,IADrG,SAEI,cAAC,EAAD,sBCMjB+B,EAjDO,WAAO,IAAD,EACatB,oBAAkB,GAD/B,mBACjBuB,EADiB,KACFC,EADE,OAEcxB,mBAA2B,MAFzC,mBAEjBS,EAFiB,KAEA5C,EAFA,OAGEmC,mBAAiB,GAHnB,mBAGjBlD,EAHiB,KAGV2E,EAHU,KAKxB5C,qBAAU,WACN,IAAM6C,EAAcC,aAAaC,QAAQ,cAErCF,GACAD,GAAUC,KAEf,IAGH,IAAMzD,EAAc,kBAAMuD,GAAY,SAAAD,GAAa,OAAKA,MAelDM,EAAQN,EACV,cAAC,EAAD,CAAiB9C,GAAG,aAApB,SACI,cAAC,EAAD,CAAUR,YAAaA,MAEzB,KAEA6D,EAAcrB,EAChB,cAAC,EAAD,CAAajB,cApBK,kBAAM3B,EAAW,OAoBQ4B,YAlB3B,SAACsC,GAAD,OAAkBN,GAAS,SAACf,GAC5C,IAAKA,GAAkB,IAATqB,EACV,OAAOrB,EAGX,IAAMsB,EAAWtB,EAAQqB,EAGzB,OAFAJ,aAAaM,QAAQ,aAAcC,OAAOF,IAEnCA,MAU8DvB,gBAAiBA,IACtF,cAAC,EAAD,CAAc5C,WAAYA,IAE9B,OACI,qCACI,cAAC,EAAD,CAAWf,MAAOA,IACjBgF,EACD,cAAC,EAAD,CAAW7D,YAAaA,IACvB4D,M,kBC/Cb1C,IAASgD,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJzD,SAAS0D,eAAe,W","file":"static/js/main.acee075e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-bonus.9bf8aeb8.svg\";","import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './AppHeader.scss'\r\n\r\nimport logo from '../../assets/images/logo-bonus.svg'\r\n\r\ninterface AppHeaderProps {\r\n    score: number\r\n}\r\n\r\nconst AppHeader: React.FC<AppHeaderProps> = ({score}) => {\r\n    return (\r\n        <header className='app-header'>\r\n            <div className=\"container\">\r\n                <div className=\"app-header__content\">\r\n                    <a href=\"/\"><img className='app-header__logo' src={logo} alt=\"logo\"/></a>\r\n                    <div className=\"app-header__content-score\">\r\n                        <div className='score_label'>SCORE</div>\r\n                        <div className='score_point'>{score}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/bg-pentagon.1ad6d365.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-spock.f4d7eee8.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/icon-lizard.0f83914c.svg\";","import GameItem from './GameItem';\r\n\r\nexport default GameItem;","import React from 'react';\r\n\r\nimport rock from '../../assets/icons/icon-rock.svg';\r\nimport spock from '../../assets/icons/icon-spock.svg';\r\nimport paper from '../../assets/icons/icon-paper.svg';\r\nimport scissors from '../../assets/icons/icon-scissors.svg';\r\nimport lizard from '../../assets/icons/icon-lizard.svg';\r\n\r\nimport './GameItem.scss';\r\nimport { gameItems } from '../../utils/types';\r\n\r\ninterface GameItemProps {\r\n    type: gameItems;\r\n}\r\n\r\ntype imgUrlKeys = {\r\n    rock: any, spock: any, paper: any, scissors: any, lizard: any;\r\n}\r\n\r\nconst GameItem: React.FC<GameItemProps> = ({ type}) => {\r\n    const imgUrl: imgUrlKeys = { rock, spock, paper, scissors, lizard };\r\n\r\n    return (\r\n        <div className={`game-item ${type}`}>\r\n            <div className=\"game-item__content\">\r\n                <img src={imgUrl[type]} alt={type}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameItem;","import AppInterface from './AppInterface';\r\n\r\nexport default AppInterface;","import React from 'react';\r\n\r\nimport pentagon from '../../assets/images/bg-pentagon.svg';\r\n\r\nimport './AppInterface.scss';\r\nimport GameItem from '../../components/GameItem';\r\nimport { gameItems } from '../../utils/types';\r\n\r\ninterface AppInterfaceProps {\r\n    selectItem: (gameItem: gameItems) => void;\r\n}\r\n\r\nconst AppInterface: React.FC<AppInterfaceProps> = ({selectItem}) => {\r\n    return (\r\n        <section className='app-interface'>\r\n            <div className=\"container\">\r\n                <div className=\"app-interface__field\">\r\n                    <img src={pentagon} alt=\"pentagon\"/>\r\n                    <div className=\"app-interface__wrapper\" onClick={() => selectItem('spock')}>\r\n                        <GameItem type='spock'/>\r\n                    </div>\r\n                    <div className=\"app-interface__wrapper\" onClick={() => selectItem('scissors')}>\r\n                        <GameItem type='scissors'/>\r\n                    </div>\r\n                    <div className='app-interface__wrapper' onClick={() => selectItem('paper')}>\r\n                        <GameItem type='paper'/>\r\n                    </div>\r\n                    <div className=\"app-interface__wrapper\" onClick={() => selectItem('rock')}>\r\n                        <GameItem type='rock'/>\r\n                    </div>\r\n                    <div className=\"app-interface__wrapper\" onClick={() => selectItem('lizard')}>\r\n                        <GameItem type='lizard'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AppInterface;","import AppFooter from './AppFooter';\r\n\r\nexport default AppFooter;","import React from 'react';\r\n\r\nimport './AppFooter.scss'\r\n\r\ninterface AppFooterProps {\r\n    switchModal: () => void\r\n}\r\n\r\nconst AppFooter: React.FC<AppFooterProps> = ({switchModal}) => {\r\n    return (\r\n        <footer className='app-footer'>\r\n            <div className=\"container-fluid\">\r\n                <button onClick={switchModal} className='app-footer__rules'>RULES</button>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default AppFooter;","export default __webpack_public_path__ + \"static/media/image-rules-bonus.dc641008.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import AppModal from './AppModal';\r\n\r\nexport default AppModal","import React from 'react';\r\n\r\nimport './AppModal.scss';\r\n\r\nimport rules from '../../assets/images/image-rules-bonus.svg';\r\nimport close from '../../assets/icons/icon-close.svg';\r\n\r\ninterface AppModalProps {\r\n    switchModal: () => void\r\n}\r\n\r\nconst AppModal: React.FC<AppModalProps> = ({switchModal}) => {\r\n\r\n    return (\r\n        <div onClick={switchModal} className='app-modal overlay'>\r\n            <div onClick={(e: React.MouseEvent<HTMLDivElement>) => e.stopPropagation()}\r\n                 className=\"modal\">\r\n                <div className=\"modal__header\">\r\n                    <h2 className='modal__header-title dark'>RULES</h2>\r\n                    <img src={close} onClick={switchModal} alt='close' className='modal__header-close close-desktop'/>\r\n                </div>\r\n                <div className=\"modal__content\">\r\n                    <img src={rules} alt=\"rules\" className='modal__content-rules'/>\r\n                    <img src={close} onClick={switchModal} alt='close' className='modal__header-close close-mobile'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppModal;","import PortalComponent from './PortalComponent';\r\n\r\nexport default PortalComponent;","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface PortalComponentProps {\r\n    children: JSX.Element,\r\n    id: string\r\n}\r\n\r\nconst PortalComponent: React.FC<PortalComponentProps> = ({ children, id }) => {\r\n    const modalRoot: HTMLDivElement = document.createElement('div');\r\n    modalRoot.id = id;\r\n\r\n    useEffect(() => {\r\n        document.body.prepend(modalRoot);\r\n        document.body.style.overflow = 'hidden';\r\n        return () => {\r\n            modalRoot.remove();\r\n            document.body.style.overflow = '';\r\n        };\r\n    }, [modalRoot]);\r\n\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            children,\r\n            modalRoot\r\n        )\r\n    );\r\n};\r\n\r\nexport default PortalComponent;","import GameResult from './GameResult';\r\n\r\nexport default GameResult;","import React, { useCallback, useEffect } from 'react';\r\n\r\nimport './GameResult.scss';\r\n\r\ninterface GameResultProps {\r\n    result: number,\r\n    dropSelection: () => void\r\n    changeScore: (diff: number) => void;\r\n}\r\n\r\nconst GameResult: React.FC<GameResultProps> = ({ result, dropSelection, changeScore }) => {\r\n    const memoizedChangeScore = useCallback(() => changeScore(result), []);\r\n\r\n    useEffect(() => {\r\n        memoizedChangeScore();\r\n    }, [result, memoizedChangeScore]);\r\n\r\n    enum transformResult {\r\n        LOSE = -1,\r\n        DRAW,\r\n        WIN\r\n    }\r\n\r\n    const message = transformResult[result] === 'DRAW' ? 'DRAW!' : `YOU ${transformResult[result]}!`;\r\n\r\n    return (\r\n        <div className='game-result'>\r\n            <h2 className='game-result__title'>{message}</h2>\r\n            <button onClick={dropSelection} className='game-result__reset'>PLAY AGAIN</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameResult;","import React, { useState, useEffect } from 'react';\r\n\r\nimport GameItem from '../../components/GameItem';\r\nimport GameResult from '../../components/GameResult';\r\n\r\nimport { gameItems, gameResult } from '../../utils/types';\r\nimport { isGameItems } from '../../utils/typeCheckers';\r\n\r\ntype baseProps = {\r\n    playerSelection: gameItems,\r\n    dropSelection: () => void\r\n    changeScore: (diff: number) => void,\r\n}\r\n\r\ntype injectedProps = {\r\n    ResultView: JSX.Element,\r\n    ComputerSelection: JSX.Element,\r\n    PlayerSelection: JSX.Element,\r\n    result: number,\r\n};\r\n\r\nconst withGameProcess = () => (View: React.ComponentType<injectedProps>) => {\r\n    return (props: baseProps) => {\r\n        const [gameResult, setGameResult] = useState<gameResult | null>(null);\r\n\r\n        useEffect(() => {\r\n            const computerSelectionNumber = Math.floor(Math.random() * 5);\r\n\r\n            /*\r\n            INDEXES: 0 - spock, 1 - scissors, 2 - paper, 3 - rock, 4 - lizard\r\n            Values in array mean result: -1 = lose, 0 = draw, 1 = win.\r\n            Example: resultMap[0][1] means that player chose spock (0) and computer chose scissors (1).\r\n            The result is 1. It means spock heats scissors. Player win.\r\n            */\r\n            const resultMap = [\r\n                [0, 1, -1, 1, -1],\r\n                [-1, 0, 1, -1, 1],\r\n                [1, -1, 0, 1, -1],\r\n                [-1, 1, -1, 0, 1],\r\n                [1, -1, 1, -1, 0],\r\n            ];\r\n\r\n            enum switchSelection {\r\n                spock,\r\n                scissors,\r\n                paper,\r\n                rock,\r\n                lizard\r\n            }\r\n\r\n            const computerSelection = switchSelection[computerSelectionNumber];\r\n            const result = resultMap[switchSelection[props.playerSelection]][computerSelectionNumber];\r\n\r\n            setGameResult({ result, computerSelection });\r\n        }, [props.playerSelection]);\r\n\r\n        const result = gameResult ? gameResult.result : 0;\r\n\r\n        const computerSelection = gameResult && isGameItems(gameResult.computerSelection) ?\r\n            <GameItem type={gameResult.computerSelection}/> : <></>;\r\n\r\n        const resultView = gameResult ?\r\n            <GameResult changeScore={props.changeScore} dropSelection={props.dropSelection}\r\n                        result={result}/>\r\n            : <></>;\r\n\r\n        const playerSelection = props.playerSelection ?\r\n            <GameItem type={props.playerSelection}/>\r\n            : <></>;\r\n\r\n        return <View ResultView={resultView}\r\n                     ComputerSelection={computerSelection}\r\n                     PlayerSelection={playerSelection}\r\n                     result={gameResult ? gameResult.result : 0}\r\n        />;\r\n    };\r\n};\r\n\r\nexport default withGameProcess;","import { gameItems } from './types';\r\n\r\nexport const isGameItems = (value: any): value is gameItems => {\r\n    return value === 'rock' || value === 'paper' || value === 'scissors' || value === 'lizard' || value === 'spock';\r\n};","import WinnerIndicator from './WinnerIndicator';\r\n\r\nexport default WinnerIndicator;","import React from 'react';\r\n\r\nimport './WinnerIndicator.scss';\r\n\r\nconst WinnerIndicator: React.FC = () => {\r\n    return (\r\n        <div className=\"winner-indicator\">\r\n            <div className=\"winner-indicator__middle\">\r\n                <div className=\"winner-indicator__inner\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WinnerIndicator;","import GameProcess from './Game';\r\n\r\nexport default GameProcess;","import React, { useEffect, useState } from 'react';\r\n\r\nimport './Game.scss';\r\n\r\nimport { withGameProcess } from '../../containers/hocs';\r\nimport WinnerIndicator from '../../components/WinnerIndicator';\r\n\r\ninterface GameProcessProps {\r\n    ResultView: JSX.Element,\r\n    ComputerSelection: JSX.Element,\r\n    PlayerSelection: JSX.Element,\r\n    result: number,\r\n}\r\n\r\nconst Game: React.FC<GameProcessProps> = ({ ResultView, ComputerSelection, PlayerSelection, result }) => {\r\n    const [computerSelectionLoaded, toggleComputerSelectionLoaded] = useState<boolean>(false);\r\n    const [resultViewLoaded, toggleResultViewLoaded] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            toggleComputerSelectionLoaded(true);\r\n\r\n            setTimeout(() => {\r\n                toggleResultViewLoaded(true);\r\n            }, 1000);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <section className='game-process'>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-4 col-md-4 col-6 game-process-selection game-process__player-selection\">\r\n                        <h2>YOU PICKED</h2>\r\n                        <div className=\"game-process__item\">\r\n                            {PlayerSelection}\r\n                            <div\r\n                                className={`winner-indicator__wrapper ${resultViewLoaded && result === 1 ? 'indicator_active' : ''}`}>\r\n                                <WinnerIndicator/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {resultViewLoaded ?\r\n                        <div\r\n                            className={`col-lg-3 mt-md-5 col-md-4 col-12 order-1 order-md-0 game-process-result ${!resultViewLoaded ? 'd-none' : ''}`}>\r\n                            {ResultView}\r\n                        </div>\r\n                        : null}\r\n                    <div className=\"col-lg-4 col-md-4 col-6 game-process-selection game-process__computer-selection\">\r\n                        <h2>THE HOUSE PICKED</h2>\r\n                        <div className=\"game-process__item\">\r\n                            {computerSelectionLoaded ? ComputerSelection : <div className='empty-item'/>}\r\n                            <div\r\n                                className={`winner-indicator__wrapper ${resultViewLoaded && result === -1 ? 'indicator_active' : ''}`}>\r\n                                <WinnerIndicator/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default withGameProcess()(Game);","import React, { useEffect, useState } from 'react';\r\n\r\nimport AppHeader from './components/AppHeader';\r\nimport AppInterface from './pages/AppInterface';\r\nimport AppFooter from './components/AppFooter';\r\nimport AppModal from './pages/AppModal';\r\nimport PortalComponent from './containers/PortalComponent';\r\nimport GameProcess from './pages/Game';\r\n\r\nimport { gameItems } from './utils/types';\r\n\r\nconst App: React.FC = () => {\r\n    const [isModalActive, toggleModal] = useState<boolean>(false);\r\n    const [playerSelection, selectItem] = useState<gameItems | null>(null);\r\n    const [score, setScore] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        const loadedScore = localStorage.getItem('game-score');\r\n\r\n        if (loadedScore) {\r\n            setScore(+loadedScore)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const switchModal = () => toggleModal(isModalActive => !isModalActive);\r\n\r\n    const dropSelection = () => selectItem(null);\r\n\r\n    const changeScore = (diff: number) => setScore((value: number) => {\r\n        if (!value && diff !== 1) {\r\n            return value;\r\n        }\r\n\r\n        const newValue = value + diff;\r\n        localStorage.setItem('game-score', String(newValue));\r\n\r\n        return newValue;\r\n    });\r\n\r\n    const modal = isModalActive ?\r\n        <PortalComponent id='modal-root'>\r\n            <AppModal switchModal={switchModal}/>\r\n        </PortalComponent>\r\n        : null;\r\n\r\n    const gameContent = playerSelection ?\r\n        <GameProcess dropSelection={dropSelection} changeScore={changeScore} playerSelection={playerSelection}/> :\r\n        <AppInterface selectItem={selectItem}/>;\r\n\r\n    return (\r\n        <>\r\n            <AppHeader score={score}/>\r\n            {gameContent}\r\n            <AppFooter switchModal={switchModal}/>\r\n            {modal}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap-reboot.min.css';\r\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}